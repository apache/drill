/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SchemaDef.proto

package org.apache.drill.exec.proto;

public final class SchemaDefProtos {
  private SchemaDefProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code exec.ValueMode}
   */
  public enum ValueMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VALUE_VECTOR = 0;</code>
     */
    VALUE_VECTOR(0),
    /**
     * <code>RLE = 1;</code>
     */
    RLE(1),
    /**
     * <code>DICT = 2;</code>
     */
    DICT(2),
    ;

    /**
     * <code>VALUE_VECTOR = 0;</code>
     */
    public static final int VALUE_VECTOR_VALUE = 0;
    /**
     * <code>RLE = 1;</code>
     */
    public static final int RLE_VALUE = 1;
    /**
     * <code>DICT = 2;</code>
     */
    public static final int DICT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueMode valueOf(int value) {
      return forNumber(value);
    }

    public static ValueMode forNumber(int value) {
      switch (value) {
        case 0: return VALUE_VECTOR;
        case 1: return RLE;
        case 2: return DICT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ValueMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ValueMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ValueMode>() {
            public ValueMode findValueByNumber(int number) {
              return ValueMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.apache.drill.exec.proto.SchemaDefProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final ValueMode[] VALUES = values();

    public static ValueMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ValueMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:exec.ValueMode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017SchemaDef.proto\022\004exec\032\013Types.proto*0\n\t" +
      "ValueMode\022\020\n\014VALUE_VECTOR\020\000\022\007\n\003RLE\020\001\022\010\n\004" +
      "DICT\020\002B0\n\033org.apache.drill.exec.protoB\017S" +
      "chemaDefProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.drill.common.types.TypeProtos.getDescriptor(),
        }, assigner);
    org.apache.drill.common.types.TypeProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
