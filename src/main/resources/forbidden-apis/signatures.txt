# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

@defaultMessage Use java.util.Objects.equals
com.google.common.base.Objects#equal(java.lang.Object, java.lang.Object)

@defaultMessage Use java.util.Objects
com.google.common.base.Objects

@defaultMessage Use java.lang.String.join
com.google.common.base.Joiner

# Remove Guava calls to construct empty collections;
# Sets.identityHashSet(),
# Sets.newHashSet(Iterable) are still OK

@defaultMessage Use "new ArrayList<>()"
com.google.common.collect.Lists#newArrayList()

@defaultMessage Use "new LinkedList<>()"
com.google.common.collect.Lists#newLinkedList()

@defaultMessage Use "new HashMap<>()"
com.google.common.collect.Maps#newHashMap()

@defaultMessage Use "new HashMap<>(java.util.Map)"
com.google.common.collect.Maps#newHashMap(java.util.Map)

@defaultMessage Use "new LinkedHashMap<>()"
com.google.common.collect.Maps#newLinkedHashMap()

@defaultMessage Use "new LinkedHashMap<>(java.util.Map)"
com.google.common.collect.Maps#newLinkedHashMap(java.util.Map)

@defaultMessage Use "new EnumMap<>(java.lang.Class)"
com.google.common.collect.Maps#newEnumMap(java.lang.Class)

@defaultMessage Use "new IdentityHashMap<>()"
com.google.common.collect.Maps#newIdentityHashMap()

@defaultMessage Use "new TreeMap<>()"
com.google.common.collect.Maps#newTreeMap()

@defaultMessage Use "new TreeMap<>(java.util.Comparator)"
com.google.common.collect.Maps#newTreeMap(java.util.Comparator)

@defaultMessage Use "new HashSet<>()"
com.google.common.collect.Sets#newHashSet()

@defaultMessage Use "new LinkedHashSet<>()"
com.google.common.collect.Sets#newLinkedHashSet()

@defaultMessage Use "new TreeSet<>()"
com.google.common.collect.Sets#newTreeSet()

@defaultMessage Use "List.stream.map(java.util.Function).collect(Collectors.toList())"
com.google.common.collect.Lists#transform(java.util.List, com.google.common.base.Function)

@defaultMessage Use "StreamSupport.stream(Iterable.spliterator(), false).map(java.util.Function).collect(Collectors.toList())"
com.google.common.collect.Iterables#transform(java.lang.Iterable, com.google.common.base.Function)

@defaultMessage Use "Collection.stream().map(java.util.Function).collect"
com.google.common.collect.Collections2#transform(java.util.Collection, com.google.common.base.Function)

@defaultMessage Use "StandardCharsets"
com.google.common.base.Charsets
