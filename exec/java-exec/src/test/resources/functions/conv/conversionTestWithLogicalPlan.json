{
  head: {
    version: 1,
    generator: {
      type: "org.apache.drill.exec.planner.logical.DrillImplementor",
      info: ""
    },
    type: "APACHE_DRILL_LOGICAL",
    resultMode: "EXEC"
  },
  storage: {
    mock : {
      type : "mock"
    }
  },
  query: [{
    op: "scan",
    @id: 1,
    storageengine: "mock",
    selection: [
    {
      records : 10,
      types : [
        {name : "tinyint_val", type : "TINYINT", mode : "REQUIRED"},
        {name : "smallint_val", type : "SMALLINT", mode : "REQUIRED"},
        {name : "int_val", type : "INT", mode : "REQUIRED"},
        {name : "bigint_val", type : "BIGINT", mode : "REQUIRED"},
        {name : "uint8_val", type : "UINT8", mode : "REQUIRED"}
       ]
     }]
  },
  {
    op: "project",
    @id: 2,
    input: 1,
    projections: [
      {ref: "col_tinyint", expr: "convert_from(convert_to(tinyint_val, 'TINYINT_BE'), 'TINYINT_BE')"},
      {ref: "col_smallint", expr: "convert_from(convert_to(smallint_val, 'SMALLINT'), 'SMALLINT')"},
      {ref: "col_int", expr: "convert_from(convert_to(int_val, 'INT'), 'INT')"},
      {ref: "col_bigint", expr: "convert_from(convert_to(bigint_val, 'BIGINT'), 'BIGINT')"},
      {ref: "col_uint8", expr: "convert_from(convert_to(uint8_val, 'UINT8'), 'UINT8')"},
      {ref: "col_smallint_be", expr: "convert_from(convert_to(smallint_val, 'SMALLINT_BE'), 'SMALLINT_BE')"},
      {ref: "col_int_be", expr: "convert_from(convert_to(int_val, 'INT_BE'), 'INT_BE')"},
      {ref: "col_bigint_be", expr: "convert_from(convert_to(bigint_val, 'BIGINT_BE'), 'BIGINT_BE')"}
    ]
  },
  {
    op: "limit",
    @id: 3,
    input: 2,
    first: 0,
    last: 10
  },
  {
    op: "store",
    @id: 4,
    input: 3,
    target: null,
    storageEngine: "--SCREEN--"
  }]
}
