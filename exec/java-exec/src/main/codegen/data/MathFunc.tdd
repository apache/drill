# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http:# www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{    
  unaryMathFunctions : [
  	{className: "Abs", funcName: "abs", javaFunc : "java.lang.Math.abs", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}
     ]
   	},
  	{className: "Ceil", funcName: "ceil", javaFunc : "java.lang.Math.ceil", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}
     ]
   	},
  	{className: "Floor", funcName: "floor", javaFunc : "java.lang.Math.floor", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}
     ]
   	},
  	{className: "Round", funcName: "round", javaFunc : "java.lang.Math.round", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}
     ]
   	},
  	{className: "Sqrt", funcName: "sqrt", javaFunc : "java.lang.Math.sqrt", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}
     ]
   	},
    {className: "Trunc", funcName: "trunc", javaFunc : "(long)", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}
     ]
   	},
    {className: "Sign", funcName: "sign", javaFunc : "java.lang.Math.signum", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}
     ]
   	}      	   
  ],  
  binaryMathFunctions : [
    {className: "Div", funcName: "div", javaFunc : " / ", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}     
     ] 
    },
    {className: "Mod", funcName: "mod", javaFunc : " % ", types: [
      {input: "Int",  outputType: "Int", castType: "int"},
      {input: "BigInt",  outputType: "BigInt", castType: "long"},
      {input: "Float4", outputType: "Float4", castType: "float"},
      {input: "Float8", outputType: "Float8", castType: "double"},
      {input: "SmallInt",  outputType: "SmallInt", castType: "short"},
      {input: "TinyInt",  outputType: "TinyInt", castType: "byte"},
      {input: "UInt1", outputType: "UInt1", castType: "byte"},
      {input: "UInt2", outputType: "UInt2", castType: "char"},
      {input: "UInt4", outputType: "UInt4", castType: "int"},
      {input: "UInt8", outputType: "UInt8", castType: "long"}     
     ] 
    }
    
  ]  
}
