#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

{
  logicalAggrTypes: [
    {className: "BitwiseAnd", funcName: "bit_and", aliasName: "every", types: [
     {inputType: "BigInt", outputType: "NullableBigInt", maxval: "Integer"},
      {inputType: "NullableBigInt", outputType: "NullableBigInt", maxval: "Integer"},
      {inputType: "Int", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "NullableInt", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "SmallInt", outputType: "NullableSmallInt", maxval: "Byte", extraCast: "short"},
      {inputType: "NullableSmallInt", outputType: "NullableSmallInt", maxval: "Byte", extraCast: "short"},
      {inputType: "TinyInt", outputType: "NullableTinyInt", maxval: "Byte", extraCast: "byte"},
      {inputType: "NullableTinyInt", outputType: "NullableTinyInt", maxval: "Byte", extraCast: "byte"},
      {inputType: "UInt1", outputType: "NullableInt", maxval: "Byte"},
      {inputType: "NullableUInt1", outputType: "NullableInt", maxval: "Byte"},
      {inputType: "UInt2", outputType: "NullableInt", maxval: "Character"},
      {inputType: "NullableUInt2", outputType: "NullableInt", maxval: "Character"},
      {inputType: "UInt4", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "NullableUInt4", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "UInt8", outputType: "NullableUInt8", maxval: "Long"},
      {inputType: "NullableUInt8", outputType: "NullableUInt8", maxval: "Long"}
     ]
   },
   {className: "BitwiseOr", funcName: "bit_or", aliasName: "", types: [
     {inputType: "BigInt", outputType: "NullableBigInt", maxval: "Integer"},
      {inputType: "NullableBigInt", outputType: "NullableBigInt", maxval: "Integer"},
      {inputType: "Int", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "NullableInt", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "SmallInt", outputType: "NullableSmallInt", maxval: "Byte", extraCast: "short"},
      {inputType: "NullableSmallInt", outputType: "NullableSmallInt", maxval: "Byte", extraCast: "short"},
      {inputType: "TinyInt", outputType: "NullableTinyInt", maxval: "Byte", extraCast: "byte"},
      {inputType: "NullableTinyInt", outputType: "NullableTinyInt", maxval: "Byte", extraCast: "byte"},
      {inputType: "UInt1", outputType: "NullableInt", maxval: "Byte"},
      {inputType: "NullableUInt1", outputType: "NullableInt", maxval: "Byte"},
      {inputType: "UInt2", outputType: "NullableInt", maxval: "Character"},
      {inputType: "NullableUInt2", outputType: "NullableInt", maxval: "Character"},
      {inputType: "UInt4", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "NullableUInt4", outputType: "NullableInt", maxval: "Integer"},
      {inputType: "UInt8", outputType: "NullableUInt8", maxval: "Long"},
      {inputType: "NullableUInt8", outputType: "NullableUInt8", maxval: "Long"}
     ]
   }
  ]
}
