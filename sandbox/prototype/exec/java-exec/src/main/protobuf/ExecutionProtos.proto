package exec.bit;

option java_package = "org.apache.drill.exec.proto";
option java_outer_classname = "ExecProtos";
option optimize_for = SPEED;

import "Coordination.proto";
import "UserBitShared.proto";



////// UserToBit RPC ///////
enum RpcType {
    HANDSHAKE = 0;
    ACK = 1;
    GOODBYE = 2;
    
    // bit requests
    REQ_INIATILIZE_FRAGMENT = 3; // Returns Handle
    REQ_RECORD_BATCH = 4; // send record batch overview, returns Ack
    
    REQ_CANCEL_FRAGMENT = 6; // send a cancellation message for a fragment, returns Ack
	REQ_FRAGMENT_STATUS = 7; // get a fragment status, returns FragmentStatus
	REQ_BIT_STATUS = 8; // get bit status.
	    
    // bit responses
    RESP_FRAGMENT_HANDLE = 9;
    RESP_FRAGMENT_STATUS = 10;
	RESP_BIT_STATUS = 11;
}


message BitHandshake{
	optional int32 rpc_version = 1;
	optional DrillbitEndpoint endpoint = 2;
}

message BitBatchChunk {}

message BitStatus {
	repeated FragmentStatus fragment_status = 1;
}

message FragmentStatus {
	
	enum FragmentState {
	  SENDING = 0;
	  AWAITING_ALLOCATION = 1;
	  RUNNING = 2;
	  FINISHED = 3;
	  CANCELLED = 4;
	  FAILED = 5;
	}
	
	optional int64 memory_use = 1;
	optional int64 batches_completed = 2;
	optional int64 records_completed = 3;
	optional int32 estimated_completion_percentage = 4;
	optional FragmentState state = 5;
	optional int64 data_processed = 6;
	
	optional FragmentHandle handle = 7;
	optional exec.shared.DrillPBError error = 8;
	optional int64 running_time = 9;
}

message FragmentRecordBatch{
	optional FragmentHandle handle = 1;
	optional int32 sending_major_fragment_id = 2;
	optional int32 sending_minor_fragment_id = 3;
	optional exec.shared.RecordBatchDef def = 4;
	optional bool isLastBatch = 5;
}

message PlanFragment {
	optional FragmentHandle handle = 1;
	optional float network_cost = 4;
	optional float cpu_cost = 5;
	optional float disk_cost = 6;
	optional float memory_cost = 7;
	optional string fragment_json = 8;
	optional DrillbitEndpoint assignment = 10;
	optional bool leaf_fragment = 9;
	optional DrillbitEndpoint foreman = 11;

}

message FragmentHandle {
	optional exec.shared.QueryId query_id = 1;
	optional int32 major_fragment_id = 2;
	optional int32 minor_fragment_id = 3;
}

message WorkQueueStatus{
	optional DrillbitEndpoint endpoint = 1;
	optional int32 queue_length = 2;
	optional int64 report_time = 3;
}
