{
	head: {
	    type: "apache_drill_logical_plan",
		version: "1",
		generator: {
		  type: "manual",
		  info: "na"
		}
		
	},


	sources: [
	  {
  		type: "text",
  		name: "local-logs",
	    files: ["local://logs/*.log"],
	    compress: "gzip",
	    line-delimiter: "\n",
	    record-maker: {type: "first-row", delimiter: ","}
	  },
	  {
	    type: "mongo",
	  	name: "users",
	    connection: "mongodb://blue:red@localhost/users"
	  },
	  {
	    type: "mysql",
	    name: "mysql",
	    connection: "jdbc:mysql://localhost/main"
	  }
	  
	],

	
	query: [

	  {
		  @id: "log",
		  op: "sequence",
		  do: [
		 	  {
				  op: "scan",
				  source: "local-logs",
				  name: "activity"
			  },
			  { 
				  op: "transform",
				  transforms: [
				    {
				    	name: "userId", 
				    	expr: "regex('activity.cookie', \"persistent=([^;]*)\")"
				    },
				        
				    {
				    	name: "session", 
				    	expr: "regex('activity.cookie', \"persistent=([^;]*)\")"
				    }
				  ]
			  },
			  {
					op: "group",
				    exprs: [ "sessionId", "session" ]
			  },
			  {
			    op: "order",
			    orders: [
			      { direction: "desc", expr: "timestamp" }
			    ]
			  },
			  { 
			    op: "transform",
			    transforms: [{name: "productId", expr: "session" }]
			  },
			  { 
			    op: "filter",
			    expr: "isNull(productId) && startsWith(path, \"/cart/add\")"
			  },
			  { op: "aggregate",
				
		      }
			  { 
			    op: "group",
			    exprs: ["productId"]
			  },
			  { 
			    op: "combine",
			    name: "productId"
		      }, 
			  { 
			    op: "nest",
			    name: "sessions",
			    exprs: ["productId"]
			  },		     
			  { 
			    op: "nest",
			    name: "user"
			  },
		  ]
	  },
 	  {
		  @id: "users",
		  op: "scan",
		  source: "mongo",
		  table: "users",
		  name: "users"
 	  },
		  { 
 		    @id: "transactions",
		    op: "scan",
		    source: "mysql",
		    name: "transactions",
		    table: "purchases"
		  },	
	 
	  {
	    @id: "usersAndTransactions",
	    op: "join",
	    left: "transactions",
	    right: "users",
	    conditions: [{left-expr: "userId", right-expr: "id", relationship: "equal"}]
	  },
	  { 
		@id: "allData"
	    op: "join",
	    left: "usersAndTransactions",
	    right: "log",
	    conditions: [{left-expr: "userId", right-expr: "id", relationship: "equal"}]
	  },
	  {
	    op: "project",
	    input: "7",
	    exprs: []
	  }
	]
	
	
	
}