// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SchemaDef.proto

#ifndef PROTOBUF_SchemaDef_2eproto__INCLUDED
#define PROTOBUF_SchemaDef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include "Types.pb.h"
// @@protoc_insertion_point(includes)

namespace exec {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SchemaDef_2eproto();
void protobuf_AssignDesc_SchemaDef_2eproto();
void protobuf_ShutdownFile_SchemaDef_2eproto();


enum ValueMode {
  VALUE_VECTOR = 0,
  RLE = 1,
  DICT = 2
};
bool ValueMode_IsValid(int value);
const ValueMode ValueMode_MIN = VALUE_VECTOR;
const ValueMode ValueMode_MAX = DICT;
const int ValueMode_ARRAYSIZE = ValueMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ValueMode_descriptor();
inline const ::std::string& ValueMode_Name(ValueMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ValueMode_descriptor(), value);
}
inline bool ValueMode_Parse(
    const ::std::string& name, ValueMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ValueMode>(
    ValueMode_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace exec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::exec::ValueMode>() {
  return ::exec::ValueMode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SchemaDef_2eproto__INCLUDED
