// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Coordination.proto

#include "Coordination.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Coordination_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Coordination_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Roles;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Coordination_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DrillbitEndpoint;
}  // namespace protobuf_Coordination_2eproto
namespace exec {
class DrillbitEndpointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DrillbitEndpoint>
      _instance;
} _DrillbitEndpoint_default_instance_;
class DrillServiceInstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DrillServiceInstance>
      _instance;
} _DrillServiceInstance_default_instance_;
class RolesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Roles>
      _instance;
} _Roles_default_instance_;
}  // namespace exec
namespace protobuf_Coordination_2eproto {
static void InitDefaultsDrillbitEndpoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::exec::_DrillbitEndpoint_default_instance_;
    new (ptr) ::exec::DrillbitEndpoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::exec::DrillbitEndpoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DrillbitEndpoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDrillbitEndpoint}, {
      &protobuf_Coordination_2eproto::scc_info_Roles.base,}};

static void InitDefaultsDrillServiceInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::exec::_DrillServiceInstance_default_instance_;
    new (ptr) ::exec::DrillServiceInstance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::exec::DrillServiceInstance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DrillServiceInstance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDrillServiceInstance}, {
      &protobuf_Coordination_2eproto::scc_info_DrillbitEndpoint.base,}};

static void InitDefaultsRoles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::exec::_Roles_default_instance_;
    new (ptr) ::exec::Roles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::exec::Roles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Roles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoles}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DrillbitEndpoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DrillServiceInstance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Roles.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, user_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, control_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, data_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillbitEndpoint, http_port_),
  0,
  3,
  4,
  5,
  2,
  1,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillServiceInstance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillServiceInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillServiceInstance, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillServiceInstance, registrationtimeutc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::DrillServiceInstance, endpoint_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::Roles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::Roles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::Roles, sql_query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::Roles, logical_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::Roles, physical_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::Roles, java_executor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exec::Roles, distributed_cache_),
  0,
  1,
  2,
  3,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::exec::DrillbitEndpoint)},
  { 21, 29, sizeof(::exec::DrillServiceInstance)},
  { 32, 42, sizeof(::exec::Roles)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::exec::_DrillbitEndpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::exec::_DrillServiceInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::exec::_Roles_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Coordination.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022Coordination.proto\022\004exec\"\212\002\n\020DrillbitE"
      "ndpoint\022\017\n\007address\030\001 \001(\t\022\021\n\tuser_port\030\002 "
      "\001(\005\022\024\n\014control_port\030\003 \001(\005\022\021\n\tdata_port\030\004"
      " \001(\005\022\032\n\005roles\030\005 \001(\0132\013.exec.Roles\022\017\n\007vers"
      "ion\030\006 \001(\t\022+\n\005state\030\007 \001(\0162\034.exec.Drillbit"
      "Endpoint.State\022\021\n\thttp_port\030\010 \001(\005\"<\n\005Sta"
      "te\022\013\n\007STARTUP\020\000\022\n\n\006ONLINE\020\001\022\r\n\tQUIESCENT"
      "\020\002\022\013\n\007OFFLINE\020\003\"i\n\024DrillServiceInstance\022"
      "\n\n\002id\030\001 \001(\t\022\033\n\023registrationTimeUTC\030\002 \001(\003"
      "\022(\n\010endpoint\030\003 \001(\0132\026.exec.DrillbitEndpoi"
      "nt\"\227\001\n\005Roles\022\027\n\tsql_query\030\001 \001(\010:\004true\022\032\n"
      "\014logical_plan\030\002 \001(\010:\004true\022\033\n\rphysical_pl"
      "an\030\003 \001(\010:\004true\022\033\n\rjava_executor\030\004 \001(\010:\004t"
      "rue\022\037\n\021distributed_cache\030\005 \001(\010:\004trueB3\n\033"
      "org.apache.drill.exec.protoB\022Coordinatio"
      "nProtosH\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 609);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Coordination.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Coordination_2eproto
namespace exec {
const ::google::protobuf::EnumDescriptor* DrillbitEndpoint_State_descriptor() {
  protobuf_Coordination_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Coordination_2eproto::file_level_enum_descriptors[0];
}
bool DrillbitEndpoint_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DrillbitEndpoint_State DrillbitEndpoint::STARTUP;
const DrillbitEndpoint_State DrillbitEndpoint::ONLINE;
const DrillbitEndpoint_State DrillbitEndpoint::QUIESCENT;
const DrillbitEndpoint_State DrillbitEndpoint::OFFLINE;
const DrillbitEndpoint_State DrillbitEndpoint::State_MIN;
const DrillbitEndpoint_State DrillbitEndpoint::State_MAX;
const int DrillbitEndpoint::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DrillbitEndpoint::InitAsDefaultInstance() {
  ::exec::_DrillbitEndpoint_default_instance_._instance.get_mutable()->roles_ = const_cast< ::exec::Roles*>(
      ::exec::Roles::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DrillbitEndpoint::kAddressFieldNumber;
const int DrillbitEndpoint::kUserPortFieldNumber;
const int DrillbitEndpoint::kControlPortFieldNumber;
const int DrillbitEndpoint::kDataPortFieldNumber;
const int DrillbitEndpoint::kRolesFieldNumber;
const int DrillbitEndpoint::kVersionFieldNumber;
const int DrillbitEndpoint::kStateFieldNumber;
const int DrillbitEndpoint::kHttpPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DrillbitEndpoint::DrillbitEndpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Coordination_2eproto::scc_info_DrillbitEndpoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:exec.DrillbitEndpoint)
}
DrillbitEndpoint::DrillbitEndpoint(const DrillbitEndpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_roles()) {
    roles_ = new ::exec::Roles(*from.roles_);
  } else {
    roles_ = NULL;
  }
  ::memcpy(&user_port_, &from.user_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&http_port_) -
    reinterpret_cast<char*>(&user_port_)) + sizeof(http_port_));
  // @@protoc_insertion_point(copy_constructor:exec.DrillbitEndpoint)
}

void DrillbitEndpoint::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roles_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_port_) -
      reinterpret_cast<char*>(&roles_)) + sizeof(http_port_));
}

DrillbitEndpoint::~DrillbitEndpoint() {
  // @@protoc_insertion_point(destructor:exec.DrillbitEndpoint)
  SharedDtor();
}

void DrillbitEndpoint::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete roles_;
}

void DrillbitEndpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DrillbitEndpoint::descriptor() {
  ::protobuf_Coordination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Coordination_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DrillbitEndpoint& DrillbitEndpoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Coordination_2eproto::scc_info_DrillbitEndpoint.base);
  return *internal_default_instance();
}


void DrillbitEndpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:exec.DrillbitEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      address_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(roles_ != NULL);
      roles_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&user_port_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&http_port_) -
        reinterpret_cast<char*>(&user_port_)) + sizeof(http_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DrillbitEndpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:exec.DrillbitEndpoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "exec.DrillbitEndpoint.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_user_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 control_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_control_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &control_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 data_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_data_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .exec.Roles roles = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "exec.DrillbitEndpoint.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .exec.DrillbitEndpoint.State state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::exec::DrillbitEndpoint_State_IsValid(value)) {
            set_state(static_cast< ::exec::DrillbitEndpoint_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 http_port = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_http_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &http_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:exec.DrillbitEndpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:exec.DrillbitEndpoint)
  return false;
#undef DO_
}

void DrillbitEndpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:exec.DrillbitEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exec.DrillbitEndpoint.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // optional int32 user_port = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->user_port(), output);
  }

  // optional int32 control_port = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->control_port(), output);
  }

  // optional int32 data_port = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->data_port(), output);
  }

  // optional .exec.Roles roles = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_roles(), output);
  }

  // optional string version = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exec.DrillbitEndpoint.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->version(), output);
  }

  // optional .exec.DrillbitEndpoint.State state = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->state(), output);
  }

  // optional int32 http_port = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->http_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:exec.DrillbitEndpoint)
}

::google::protobuf::uint8* DrillbitEndpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:exec.DrillbitEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exec.DrillbitEndpoint.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // optional int32 user_port = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->user_port(), target);
  }

  // optional int32 control_port = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->control_port(), target);
  }

  // optional int32 data_port = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->data_port(), target);
  }

  // optional .exec.Roles roles = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_roles(), deterministic, target);
  }

  // optional string version = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exec.DrillbitEndpoint.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->version(), target);
  }

  // optional .exec.DrillbitEndpoint.State state = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->state(), target);
  }

  // optional int32 http_port = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->http_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:exec.DrillbitEndpoint)
  return target;
}

size_t DrillbitEndpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:exec.DrillbitEndpoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional string version = 6;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional .exec.Roles roles = 5;
    if (has_roles()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *roles_);
    }

    // optional int32 user_port = 2;
    if (has_user_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_port());
    }

    // optional int32 control_port = 3;
    if (has_control_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->control_port());
    }

    // optional int32 data_port = 4;
    if (has_data_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_port());
    }

    // optional .exec.DrillbitEndpoint.State state = 7;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional int32 http_port = 8;
    if (has_http_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->http_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DrillbitEndpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:exec.DrillbitEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const DrillbitEndpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DrillbitEndpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:exec.DrillbitEndpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:exec.DrillbitEndpoint)
    MergeFrom(*source);
  }
}

void DrillbitEndpoint::MergeFrom(const DrillbitEndpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:exec.DrillbitEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_roles()->::exec::Roles::MergeFrom(from.roles());
    }
    if (cached_has_bits & 0x00000008u) {
      user_port_ = from.user_port_;
    }
    if (cached_has_bits & 0x00000010u) {
      control_port_ = from.control_port_;
    }
    if (cached_has_bits & 0x00000020u) {
      data_port_ = from.data_port_;
    }
    if (cached_has_bits & 0x00000040u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000080u) {
      http_port_ = from.http_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrillbitEndpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:exec.DrillbitEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrillbitEndpoint::CopyFrom(const DrillbitEndpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:exec.DrillbitEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrillbitEndpoint::IsInitialized() const {
  return true;
}

void DrillbitEndpoint::Swap(DrillbitEndpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DrillbitEndpoint::InternalSwap(DrillbitEndpoint* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roles_, other->roles_);
  swap(user_port_, other->user_port_);
  swap(control_port_, other->control_port_);
  swap(data_port_, other->data_port_);
  swap(state_, other->state_);
  swap(http_port_, other->http_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DrillbitEndpoint::GetMetadata() const {
  protobuf_Coordination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Coordination_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DrillServiceInstance::InitAsDefaultInstance() {
  ::exec::_DrillServiceInstance_default_instance_._instance.get_mutable()->endpoint_ = const_cast< ::exec::DrillbitEndpoint*>(
      ::exec::DrillbitEndpoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DrillServiceInstance::kIdFieldNumber;
const int DrillServiceInstance::kRegistrationTimeUTCFieldNumber;
const int DrillServiceInstance::kEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DrillServiceInstance::DrillServiceInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Coordination_2eproto::scc_info_DrillServiceInstance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:exec.DrillServiceInstance)
}
DrillServiceInstance::DrillServiceInstance(const DrillServiceInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_endpoint()) {
    endpoint_ = new ::exec::DrillbitEndpoint(*from.endpoint_);
  } else {
    endpoint_ = NULL;
  }
  registrationtimeutc_ = from.registrationtimeutc_;
  // @@protoc_insertion_point(copy_constructor:exec.DrillServiceInstance)
}

void DrillServiceInstance::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&endpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&registrationtimeutc_) -
      reinterpret_cast<char*>(&endpoint_)) + sizeof(registrationtimeutc_));
}

DrillServiceInstance::~DrillServiceInstance() {
  // @@protoc_insertion_point(destructor:exec.DrillServiceInstance)
  SharedDtor();
}

void DrillServiceInstance::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete endpoint_;
}

void DrillServiceInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DrillServiceInstance::descriptor() {
  ::protobuf_Coordination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Coordination_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DrillServiceInstance& DrillServiceInstance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Coordination_2eproto::scc_info_DrillServiceInstance.base);
  return *internal_default_instance();
}


void DrillServiceInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:exec.DrillServiceInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(endpoint_ != NULL);
      endpoint_->Clear();
    }
  }
  registrationtimeutc_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DrillServiceInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:exec.DrillServiceInstance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "exec.DrillServiceInstance.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 registrationTimeUTC = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_registrationtimeutc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &registrationtimeutc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .exec.DrillbitEndpoint endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_endpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:exec.DrillServiceInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:exec.DrillServiceInstance)
  return false;
#undef DO_
}

void DrillServiceInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:exec.DrillServiceInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exec.DrillServiceInstance.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional int64 registrationTimeUTC = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->registrationtimeutc(), output);
  }

  // optional .exec.DrillbitEndpoint endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_endpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:exec.DrillServiceInstance)
}

::google::protobuf::uint8* DrillServiceInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:exec.DrillServiceInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exec.DrillServiceInstance.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional int64 registrationTimeUTC = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->registrationtimeutc(), target);
  }

  // optional .exec.DrillbitEndpoint endpoint = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_endpoint(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:exec.DrillServiceInstance)
  return target;
}

size_t DrillServiceInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:exec.DrillServiceInstance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .exec.DrillbitEndpoint endpoint = 3;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *endpoint_);
    }

    // optional int64 registrationTimeUTC = 2;
    if (has_registrationtimeutc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->registrationtimeutc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DrillServiceInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:exec.DrillServiceInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const DrillServiceInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DrillServiceInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:exec.DrillServiceInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:exec.DrillServiceInstance)
    MergeFrom(*source);
  }
}

void DrillServiceInstance::MergeFrom(const DrillServiceInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:exec.DrillServiceInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_endpoint()->::exec::DrillbitEndpoint::MergeFrom(from.endpoint());
    }
    if (cached_has_bits & 0x00000004u) {
      registrationtimeutc_ = from.registrationtimeutc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrillServiceInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:exec.DrillServiceInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrillServiceInstance::CopyFrom(const DrillServiceInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:exec.DrillServiceInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrillServiceInstance::IsInitialized() const {
  return true;
}

void DrillServiceInstance::Swap(DrillServiceInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DrillServiceInstance::InternalSwap(DrillServiceInstance* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(endpoint_, other->endpoint_);
  swap(registrationtimeutc_, other->registrationtimeutc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DrillServiceInstance::GetMetadata() const {
  protobuf_Coordination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Coordination_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Roles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Roles::kSqlQueryFieldNumber;
const int Roles::kLogicalPlanFieldNumber;
const int Roles::kPhysicalPlanFieldNumber;
const int Roles::kJavaExecutorFieldNumber;
const int Roles::kDistributedCacheFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Roles::Roles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Coordination_2eproto::scc_info_Roles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:exec.Roles)
}
Roles::Roles(const Roles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sql_query_, &from.sql_query_,
    static_cast<size_t>(reinterpret_cast<char*>(&distributed_cache_) -
    reinterpret_cast<char*>(&sql_query_)) + sizeof(distributed_cache_));
  // @@protoc_insertion_point(copy_constructor:exec.Roles)
}

void Roles::SharedCtor() {
  sql_query_ = true;
  logical_plan_ = true;
  physical_plan_ = true;
  java_executor_ = true;
  distributed_cache_ = true;
}

Roles::~Roles() {
  // @@protoc_insertion_point(destructor:exec.Roles)
  SharedDtor();
}

void Roles::SharedDtor() {
}

void Roles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Roles::descriptor() {
  ::protobuf_Coordination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Coordination_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Roles& Roles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Coordination_2eproto::scc_info_Roles.base);
  return *internal_default_instance();
}


void Roles::Clear() {
// @@protoc_insertion_point(message_clear_start:exec.Roles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    sql_query_ = true;
    logical_plan_ = true;
    physical_plan_ = true;
    java_executor_ = true;
    distributed_cache_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Roles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:exec.Roles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool sql_query = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sql_query();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sql_query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool logical_plan = 2 [default = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_logical_plan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &logical_plan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool physical_plan = 3 [default = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_physical_plan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &physical_plan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool java_executor = 4 [default = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_java_executor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &java_executor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool distributed_cache = 5 [default = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_distributed_cache();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &distributed_cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:exec.Roles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:exec.Roles)
  return false;
#undef DO_
}

void Roles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:exec.Roles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool sql_query = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->sql_query(), output);
  }

  // optional bool logical_plan = 2 [default = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->logical_plan(), output);
  }

  // optional bool physical_plan = 3 [default = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->physical_plan(), output);
  }

  // optional bool java_executor = 4 [default = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->java_executor(), output);
  }

  // optional bool distributed_cache = 5 [default = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->distributed_cache(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:exec.Roles)
}

::google::protobuf::uint8* Roles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:exec.Roles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool sql_query = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->sql_query(), target);
  }

  // optional bool logical_plan = 2 [default = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->logical_plan(), target);
  }

  // optional bool physical_plan = 3 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->physical_plan(), target);
  }

  // optional bool java_executor = 4 [default = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->java_executor(), target);
  }

  // optional bool distributed_cache = 5 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->distributed_cache(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:exec.Roles)
  return target;
}

size_t Roles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:exec.Roles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bool sql_query = 1 [default = true];
    if (has_sql_query()) {
      total_size += 1 + 1;
    }

    // optional bool logical_plan = 2 [default = true];
    if (has_logical_plan()) {
      total_size += 1 + 1;
    }

    // optional bool physical_plan = 3 [default = true];
    if (has_physical_plan()) {
      total_size += 1 + 1;
    }

    // optional bool java_executor = 4 [default = true];
    if (has_java_executor()) {
      total_size += 1 + 1;
    }

    // optional bool distributed_cache = 5 [default = true];
    if (has_distributed_cache()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Roles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:exec.Roles)
  GOOGLE_DCHECK_NE(&from, this);
  const Roles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Roles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:exec.Roles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:exec.Roles)
    MergeFrom(*source);
  }
}

void Roles::MergeFrom(const Roles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:exec.Roles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      sql_query_ = from.sql_query_;
    }
    if (cached_has_bits & 0x00000002u) {
      logical_plan_ = from.logical_plan_;
    }
    if (cached_has_bits & 0x00000004u) {
      physical_plan_ = from.physical_plan_;
    }
    if (cached_has_bits & 0x00000008u) {
      java_executor_ = from.java_executor_;
    }
    if (cached_has_bits & 0x00000010u) {
      distributed_cache_ = from.distributed_cache_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Roles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:exec.Roles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Roles::CopyFrom(const Roles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:exec.Roles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Roles::IsInitialized() const {
  return true;
}

void Roles::Swap(Roles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Roles::InternalSwap(Roles* other) {
  using std::swap;
  swap(sql_query_, other->sql_query_);
  swap(logical_plan_, other->logical_plan_);
  swap(physical_plan_, other->physical_plan_);
  swap(java_executor_, other->java_executor_);
  swap(distributed_cache_, other->distributed_cache_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Roles::GetMetadata() const {
  protobuf_Coordination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Coordination_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace exec
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::exec::DrillbitEndpoint* Arena::CreateMaybeMessage< ::exec::DrillbitEndpoint >(Arena* arena) {
  return Arena::CreateInternal< ::exec::DrillbitEndpoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::exec::DrillServiceInstance* Arena::CreateMaybeMessage< ::exec::DrillServiceInstance >(Arena* arena) {
  return Arena::CreateInternal< ::exec::DrillServiceInstance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::exec::Roles* Arena::CreateMaybeMessage< ::exec::Roles >(Arena* arena) {
  return Arena::CreateInternal< ::exec::Roles >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
